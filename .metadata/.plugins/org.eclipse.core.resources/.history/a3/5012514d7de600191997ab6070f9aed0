package app;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Main
{
    @SuppressWarnings("resource")
	public static void main(String[] args)
       {
            Scanner reader =new Scanner(System.in);         
          /*  int m=reader.nextInt();
            Integer i=null;
            int y=0;
            List<Integer> list=new ArrayList<Integer >();*/
          /*  int data[]=new int[m]; 
            {
            	for(int i=0;i<m;i++)
            	{
            		data[i]=reader.nextInt();
            	}
            }
            //data存放钉子数，单价等
            int N=reader.nextInt();//总钱数
            Max(data,N);   //输出值    
            */ 
            Integer i=100;
            int j=100;
            System.out.print("Integer i=100;  int       j=100;对于i==j,自动拆箱与装箱--->");
            System.out.println(i==j);             
            Integer ii=100;
            Integer jj=100;
            System.out.print("Integer ii=100; Integer  jj=100;对于ii==jj,封装类比较--->");
            System.out.println(ii==jj);
            Integer iii=200;
            Integer jjj=200;
            System.out.print("Integer iii=200;Integer jjj=200;对于iii==jjj,封装类比较--->");
            System.out.println(iii==jjj);
            i=200;
            j=200;
            System.out.print(" i=100;j=100;对于i==j,--->");
            System.out.println(i==j);
      }      
    
    public static void Max(int data[],int N)
    {   int max=0;  	
    	for (int i=0;i<=data.length;i++)
        {        	
        		if(data[i]>max)max=data[i];      	          
        }   	
    	if(N<max)System.out.print(-1);//判断条件
    	
    	int amount[]=new int[N+1];   	
    	for (int i=0;i<=N;i++)
        {        	
        		amount[i]=N+1;      	          
        }
    	amount[0]=0; 
    	for (int i=0;i<=N;i++)
        {        	
        	for(int j=0;j<data.length;j++)
        	{
        		if(i-data[j]<0)
        		{
        			continue;
        		}        		
        		amount[i]=Math.min(amount[i],1+amount[i-data[j]]);        		
        	}
        }      
    	if(amount[N]==N+1)System.out.print(-1);
        System.out.print(amount[N]);
    }
}